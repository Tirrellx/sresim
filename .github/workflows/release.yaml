name: Release Management

on:
  push:
    tags:
      - 'v*.*.*'  # Matches version tags like v1.0.0
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release (e.g., 1.0.0)'
        required: true
        type: string
      release_type:
        description: 'Type of release'
        required: true
        type: choice
        options:
          - patch
          - minor
          - major

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  VERSION: ${{ github.event.inputs.version || github.ref_name }}

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.24'
          check-latest: true
      
      - name: Generate Changelog
        id: changelog
        uses: TriPSs/conventional-changelog-action@v3
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          version: ${{ env.VERSION }}
          output-file: CHANGELOG.md
          git-message: "chore(release): {version}"
          preset: angular
          tag-prefix: 'v'
          release-count: 0
      
      - name: Build and Push Docker Image
        uses: docker/build-push-action@v5
        with:
          context: ./app-sresim
          file: ./app-sresim/Dockerfile.prod
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.VERSION }}
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/amd64,linux/arm64
      
      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          name: Release v${{ env.VERSION }}
          body: ${{ steps.changelog.outputs.clean_changelog }}
          draft: false
          prerelease: false
          files: |
            ./app-sresim/CHANGELOG.md
          token: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Update Kubernetes Manifests
        run: |
          cd app-sresim/k8s
          # Update image tag in deployment
          sed -i "s|image: .*|image: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.VERSION }}|" deployment.yaml
          # Create a new commit with updated manifests
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add deployment.yaml
          git commit -m "chore(release): update deployment to v${{ env.VERSION }}"
          git push
      
      - name: Notify Release
        uses: actions/github-script@v7
        with:
          script: |
            const release = context.payload.release;
            const message = `ðŸŽ‰ New release v${release.tag_name} has been published!\n\n${release.body}`;
            
            // Create a comment on the release
            await github.rest.repos.createCommitComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              commit_sha: context.sha,
              body: message
            });
            
            // Optionally notify other systems (e.g., Slack, Teams)
            // Add your notification logic here 