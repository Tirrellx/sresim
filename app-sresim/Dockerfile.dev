# Build stage
FROM golang:1.24-alpine AS builder

# Install build dependencies
RUN apk add --no-cache git

# Create non-root user
RUN adduser -D -g '' appuser

# Set working directory
WORKDIR /app

# Copy go mod and sum files
COPY go.mod go.sum ./

# Download dependencies
RUN go mod download

# Copy source code
COPY . .

# Build the application with debug information
RUN CGO_ENABLED=0 GOOS=linux \
    go build -a -installsuffix cgo \
    -ldflags="-X main.Version=$(git describe --tags --always --dirty) \
    -X main.BuildTime=$(date -u +'%Y-%m-%d_%H:%M:%S')" \
    -gcflags="all=-N -l" \
    -o sresim ./cmd/main.go

# Run stage
FROM gcr.io/distroless/static-debian12:debug

# Copy binary from builder
COPY --from=builder /app/sresim /sresim

# Copy config files if needed
COPY --from=builder /app/k8s/configmap.yaml /config.yaml

# Set development environment variables
ENV GIN_MODE=debug \
    TZ=UTC \
    GOMAXPROCS=1 \
    GODEBUG=netdns=go \
    GOTRACEBACK=all \
    LOG_LEVEL=debug

# Expose ports
EXPOSE 8080
EXPOSE 2345

# Health check
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
    CMD ["/sresim", "health"]

# Run the application with Delve debugger
ENTRYPOINT ["/dlv", "--listen=:2345", "--headless=true", "--api-version=2", "--accept-multiclient", "exec", "/sresim", "--"] 